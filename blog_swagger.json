{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple server for storing blog entries.",
    "version": "1.0.0",
    "title": "Blog",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "morvai.daniel96@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "blog.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "entry",
      "description": "Entry routes"
    },
    {
      "name": "category",
      "description": "Category routes"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/entry": {
      "post": {
        "tags": [
          "entry"
        ],
        "summary": "Add a new entry to blog",
        "description": "",
        "operationId": "addEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Entry to be added to blog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert OK"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/entry/{id}": {
      "put": {
        "tags": [
          "entry"
        ],
        "summary": "Update an existing entry",
        "description": "",
        "operationId": "updateEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Entry to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of entry to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful"
          },
          "404": {
            "description": "Entry not found"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": [
          "entry"
        ],
        "summary": "Delete an existing entry",
        "description": "",
        "operationId": "deleteEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Entry to be deleted",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of entry to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Entry not found"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/entry/{entryId}/add/{categoryId}": {
      "post": {
        "tags": [
          "entry"
        ],
        "summary": "Adds an entry to a category",
        "description": "",
        "operationId": "addCategoryToEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "ID of entry",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Insert successful"
          },
          "403": {
            "description": "Already 5 pairs"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/entry/{entryId}/remove/{categoryId}": {
      "delete": {
        "tags": [
          "entry"
        ],
        "summary": "Removes an entry from a category",
        "description": "",
        "operationId": "removeCategoryToEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "ID of entry",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Pair not found"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/category": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Add a new category",
        "description": "",
        "operationId": "addCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert OK"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/category/{id}": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Update an existing category",
        "description": "",
        "operationId": "updateCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of category to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful"
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete an existing category",
        "description": "",
        "operationId": "deleteCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category to be deleted",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of category to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Entry": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "EntryId": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "Created": {
          "type": "integer"
        },
        "Modified": {
          "type": "integer"
        }
      }
    },
    "Category": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "CategoryId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryName": {
          "type": "string"
        },
        "labelList": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}